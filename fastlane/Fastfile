default_platform(:ios)

platform :ios do
  desc "Run tests including snapshots"
  lane :test do
    root_path = "/Users/runner/work/swift-githubactions/swift-githubactions"
    derived_data_path = "#{root_path}/DerivedData"

    # Cleanup old reference images
    FileUtils.rm_rf("#{root_path}/sumer-ios/Tests/ReferenceImages")
    
    # Clone snapshot repository
    sh("git clone https://x-access-token:#{ENV['REPO_TOKEN']}@github.com/#{ENV['SNAPSHOT_REPO']}.git GitStorageForSnapshots")
    
    # Create directory for reference images
    FileUtils.mkdir_p("#{root_path}/sumer-ios/Tests/ReferenceImages")
    
    if Dir.exist?("GitStorageForSnapshots/ReferenceImages")
      FileUtils.cp_r(Dir["GitStorageForSnapshots/ReferenceImages/."], "#{root_path}/sumer-ios/Tests/ReferenceImages/")
    end

    # Run tests with explicit paths
    scan(
      workspace: nil,  # Set to nil since we're using a package
      package_path: "#{root_path}/sumer-ios",  # Point directly to package
      scheme: "MyFeature",
      device: "iPhone SE (3rd generation)",
      clean: true,
      configuration: "Debug",
      derived_data_path: derived_data_path,
      output_style: 'raw',
      output_types: 'raw,html,junit',
      result_bundle: true,
      buildlog_path: "#{root_path}/fastlane/test_output",
      include_simulator_logs: true,
      xcargs: [
        "CI=true",
        "ENABLE_TESTABILITY=YES",
        "ONLY_ACTIVE_ARCH=YES",
        "DERIVED_DATA_PATH=#{derived_data_path}"
      ].join(" ")
    )
  end
end