default_platform(:ios)

platform :ios do
  desc "Run tests including snapshots"
  lane :test do
    root_path = "/Users/runner/work/swift-githubactions/swift-githubactions"
    test_output_path = "#{root_path}/fastlane/test_output"
    xcresult_path = "#{test_output_path}/MyFeature.xcresult"

    # Print current path and contents before doing anything
    puts "Current directory: #{Dir.pwd}"
    sh("ls -R #{root_path}/sumer-ios/Tests")

    # Create test output directory
    FileUtils.mkdir_p(test_output_path)

    # Print directory structure before tests
    puts "Test output directory created at: #{test_output_path}"
    sh("ls -la #{test_output_path}")

    # Cleanup old reference images
    FileUtils.rm_rf("#{root_path}/sumer-ios/Tests/MyTestSupport/ReferenceImages")  # Updated path
    
    # Clone snapshot repository
    sh("git clone https://x-access-token:#{ENV['REPO_TOKEN']}@github.com/#{ENV['SNAPSHOT_REPO']}.git GitStorageForSnapshots")
    
    # Create directory for reference images with correct path
    FileUtils.mkdir_p("#{root_path}/sumer-ios/Tests/MyTestSupport/ReferenceImages")  # Updated path
    
    if Dir.exist?("GitStorageForSnapshots/ReferenceImages")
      puts "Found reference images in repository"
      # Copy with verbose flag to see what's being copied
      FileUtils.cp_r(Dir["GitStorageForSnapshots/ReferenceImages/."], "#{root_path}/sumer-ios/Tests/MyTestSupport/ReferenceImages/", verbose: true)
      
      # Verify the copied files
      puts "Contents of reference images directory after copy:"
      sh("ls -R #{root_path}/sumer-ios/Tests/MyTestSupport/ReferenceImages")
    end

    # Define devices to test
    devices = [
      "iPhone SE (3rd generation)",
      "iPhone 13",
      "iPhone 13 Pro Max"
    ]

    devices.each do |device|
      device_name = device.downcase.gsub(" ", "_").gsub("(", "").gsub(")", "")
      xcresult_path = "#{test_output_path}/MyFeature_#{device_name}.xcresult"

      # Rest of your scan configuration...
      scan(
        package_path: "#{root_path}/sumer-ios",
        scheme: "MyFeature",
        device: device,
        clean: true,
        configuration: "Debug",
        derived_data_path: "#{root_path}/DerivedData",
        output_style: 'raw',
        output_types: 'raw,html,junit',
        result_bundle: true,
        result_bundle_path: xcresult_path,
        buildlog_path: test_output_path,
        include_simulator_logs: true,
        xcargs: "CI=true ENABLE_TESTABILITY=YES ONLY_ACTIVE_ARCH=YES"
      )
    end
  end
end